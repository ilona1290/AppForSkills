@inject NavigationManager NavigationManager
@inject HttpClient Http

<MudDialog Style="background: linear-gradient(90deg, rgba(9,122,227,1) 46%, rgba(4,170,242,1) 100%); color: white">
    <DialogContent>
        <MudText>@ContentText</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Style="color: white" OnClick="Cancel">Zamknij</MudButton>
        <MudButton Color="@Color" Variant="Variant.Filled" OnClick="Submit">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string ContentText { get; set; }

    [Parameter] public string ButtonText { get; set; }

    [Parameter] public Color Color { get; set; }

    [Parameter] public string Category { get; set; }

    [Parameter] public int MainId { get; set; }

    [Parameter] public int Id { get; set; }

    private async void Submit()
    {
        if(Category == "SkillPost")
        {
            await Http.DeleteAsync($"api/posts/{Id}");
            NavigationManager.NavigateTo($"/skillPosts", forceLoad: true);
        }
        else if(Category == "Discussion")
        {
            await Http.DeleteAsync($"api/discussions/{Id}");
            NavigationManager.NavigateTo($"/discussions", forceLoad: true);
        }
        else if(Category == "Comment")
        {
            await Http.DeleteAsync($"api/posts/{MainId}/comments/{Id}");
            NavigationManager.NavigateTo($"/skillPosts/{MainId}", forceLoad: true);
        }
        else if(Category == "Rating")
        {
            await Http.DeleteAsync($"api/posts/{MainId}/ratings/{Id}");
            NavigationManager.NavigateTo($"/skillPosts/{MainId}/ratings", forceLoad: true);
        }
        else if(Category == "DiscussionPost")
        {
            await Http.DeleteAsync($"api/discussions/{MainId}/posts/{Id}");
            NavigationManager.NavigateTo($"/discussions/{MainId}", forceLoad: true);
        }

    }
    private void Cancel() => MudDialog.Cancel();
}
